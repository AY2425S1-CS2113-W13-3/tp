@startuml
actor User
participant "CopyCommand" as CC
participant "EventList" as EL
participant "Event (source)" as SourceEvent
participant "Event (destination)" as DestEvent
participant "Participant" as P

User -> CC: execute()
activate CC

CC -> EL: getEventByName(copyFrom)
activate EL
EL --> CC: return SourceEvent (Optional<Event>)
deactivate EL

CC -> EL: getEventByName(copyTo)
activate EL
EL --> CC: return DestEvent (Optional<Event>)
deactivate EL

alt Both Events Found
    CC -> SourceEvent: getParticipantList()
    activate SourceEvent
    SourceEvent --> CC: return participants (ArrayList<Participant>)
    deactivate SourceEvent

    alt Participant List Not Empty
        CC -> DestEvent: setParticipantList(participants)
        activate DestEvent
        deactivate DestEvent
        CC -> CC: Append COPY_SUCCESSFUL
    else Participant List Empty
        CC -> CC: Append PARTICIPANT_NOT_FOUND
    end alt

else Event(s) Not Found
    CC -> CC: Append EVENT_NOT_FOUND
end alt

CC --> User: Display copy result message
deactivate CC

@enduml