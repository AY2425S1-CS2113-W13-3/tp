@startuml
!include style.puml
hide footbox

'Main -> Parser: add n/Meeting t/2023-11-10T14:00 v/Room 101 p/HIGH
'activate Parser
'Parser -> AddCommand: new AddCommand("Meeting", time, "Room 101", Priority.HIGH)
'activate AddCommand
'AddCommand -> EventList: addEvent("Meeting", time, "Room 101", Priority.HIGH)
'activate EventList
'EventList -> Event: new Event("Meeting", time, "Room 101", Priority.HIGH)
'activate Event
'Event --> EventList
'deactivate Event
'EventList --> AddCommand
'deactivate EventList
'AddCommand --> Parser
'deactivate AddCommand
'Parser --> Main
'deactivate Parser

    participant ":AddCommand" as command COMMAND_COLOUR
    participant ":EventList" as eventList EVENT_COLOUR
    participant ":Optional<Event>" as existing_event EVENT_COLOUR
    participant "newEvent:Event" as event EVENT_COLOUR

group sd Add event to event list
    activate command COMMAND_COLOUR
    command -> eventList : addEvent(eventName, time, venue, priority)
    activate eventList EVENT_COLOUR

    eventList -> eventList : getEventByName(eventName)
    activate eventList EVENT_COLOUR

    return :Optional<Event>

    eventList -> existing_event : isPresent()
    activate existing_event EVENT_COLOUR

    return :boolean

    alt isPresent() == true
        eventList --> command : :DuplicateDataException
    else isPresent() == false

        create event
        eventList -> event : Event(eventName, venue, time, priority)
        activate event EVENT_COLOUR

        return

        eventList -> eventList : add(newEvent : Event)
        activate eventList EVENT_COLOUR

        return

        return
    end

end

@enduml